# vim: syntax=sql
[auto_discovery_60]
minutes: 60
inst.lld: select distinct inst_name "{#INST_NAME}"
            from (select inst_name from v$active_instances 
                  union
                  select instance_name from gv$instance)

db.lld: select name "{#PDB}" from v$pdbs union select name from v$database where cdb = 'NO'

parm.lld: select i.instance_name "{#INST_NAME}", p.name "{#PARAMETER}"
            from gv$instance i, gv$parameter p
            where i.instance_number = p.inst_id
            and   p.type in (3,6) and p.isdefault = 'FALSE'
p_ts.lld: select decode (s.con_id,0, d.name, 1,'ROOT',p.name) "{#PDB}", tablespace_name "{#TS_NAME}"
            from cdb_tablespaces s
          , v$pdbs p
          , v$database d
          where p.con_id(+) = s.con_id            
          and contents = 'PERMANENT'

t_ts.lld: select decode (s.con_id,0, d.name, 1,'ROOT',p.name) "{#PDB}", tablespace_name "{#TS_NAME}"
            from cdb_tablespaces s
          , v$pdbs p
          , v$database d
          where p.con_id(+) = s.con_id            
          and contents = 'TEMPORARY'

u_ts.lld: select decode (s.con_id,0, d.name, 1,'ROOT',p.name) "{#PDB}", tablespace_name "{#TS_NAME}"
            from cdb_tablespaces s
          , v$pdbs p
          , v$database d
          where p.con_id(+) = s.con_id            
          and contents = 'UNDO'
expu.lld: select decode (s.con_id,0, d.name, 1,'ROOT',p.name) "{#PDB}", username "{#USERNAME}"
            from cdb_users s
            , v$pdbs p
            , v$database d
            where p.con_id(+) = s.con_id
            and account_status IN ( 'OPEN', 'EXPIRED(GRACE)' )
            and expiry_date > sysdate
            and expiry_date < (sysdate + 30)

[checks_01m]
minutes: 1
inst.uptime: select 'inst['||instance_name||',uptime]' key,(sysdate -startup_time)*60*60*24 val from gv$instance

[checks_05m]
minutes: 5
parm.val:  select 'parm['||i.instance_name||','||p.name||',value]' key, p.value
            from gv$instance i, gv$parameter p
            where i.instance_number = p.inst_id
            and   p.type in (3,6) and p.isdefault = 'FALSE'
            and   upper(p.description) not like '%SIZE%'
            union all
            select 'parm['||i.instance_name||','||p.name||',size]' key, p.value
            from gv$instance i, gv$parameter p
            where i.instance_number = p.inst_id
            and   p.type in (3,6) and p.isdefault = 'FALSE'
            and   upper(p.description) like '%SIZE%'

u_ts: select 'u_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',filesize]' key, s.bytes
       from (
         select df.con_id, df.tablespace_name, sum(bytes) bytes
           from cdb_data_files df
           ,    cdb_tablespaces ts
          where df.tablespace_name = ts.tablespace_name
            and df.con_id = ts.con_id
            and ts.contents = 'UNDO'
          group by df.con_id, df.tablespace_name
             ) s
         , v$pdbs p
         , v$database d
         where p.con_id(+) = s.con_id
       union all
        select 'u_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',maxsize]' key, s.maxbytes
          from ( select t.con_id, t.tablespace_name, sum(maxbytes) maxbytes
          from 
           (select case when autoextensible = 'NO'
                                 then bytes
                       else
                        case when bytes > maxbytes
                                 then bytes
                        else          maxbytes
                        end
                       end maxbytes, tablespace_name, con_id
                  from cdb_data_files) f
              , cdb_tablespaces t
         where t.contents = 'UNDO'
           and  t.tablespace_name = f.tablespace_name
           and  t.con_id          = f.con_id
         group by t.tablespace_name, t.con_id
         ) s
          , v$pdbs p
          , v$database d
          where p.con_id(+) = s.con_id
       union all
        select 'u_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',usedbytes]' key,  usedbytes
      from (select t.con_id, t.tablespace_name, sum(f.bytes) - sum(a.bytes) usedbytes
        from cdb_data_files f
        join cdb_tablespaces t
          on ( f.tablespace_name = t.tablespace_name)
        left join (select con_id, tablespace_name, sum(bytes) bytes
        from cdb_free_space group by con_id,tablespace_name) a
          on (    t.tablespace_name = a.tablespace_name
              and f.tablespace_name = a.tablespace_name
              and t.con_id          = a.con_id
              and f.con_id          = a.con_id
              )
        where t.contents = 'UNDO'
        group by t.tablespace_name, t.con_id
        )s
        , v$pdbs p
        , v$database d
        where p.con_id(+) = s.con_id
       union all
        select 'u_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',pctfree]' key,  pct_free
      from (select t.con_id, t.tablespace_name, round((sum(a.bytes) / sum(f.bytes)) * 100) pct_free
        from cdb_data_files f
        join cdb_tablespaces t
          on ( f.tablespace_name = t.tablespace_name)
        left join (select con_id, tablespace_name, sum(bytes) bytes
        from cdb_free_space group by con_id,tablespace_name) a
          on (    t.tablespace_name = a.tablespace_name
              and f.tablespace_name = a.tablespace_name
              and t.con_id          = a.con_id
              and f.con_id          = a.con_id
              )
        where t.contents = 'UNDO'
        group by t.tablespace_name, t.con_id
        )s
        , v$pdbs p
        , v$database d
        where p.con_id(+) = s.con_id
t_ts: 
  select   't_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.TABLESPACE||',filesize]', s.totalspace
    from (select   round (sum (d.bytes))  AS totalspace,
                   d.tablespace_name tablespace, con_id
              from cdb_temp_files d
          group by d.tablespace_name, d.con_id) s
          , v$pdbs p
         , v$database d
         where p.con_id(+) = s.con_id
   union all
  select   't_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.TABLESPACE_name||',maxsize]', maxbytes
        from (select f.con_id, f.tablespace_name, sum(maxbytes) maxbytes
        from (select case when autoextensible = 'NO'
                               then bytes
                     else
                      case when bytes > maxbytes
                               then bytes
                      else          maxbytes
                      end
                     end maxbytes, tablespace_name, con_id
                from cdb_temp_files) f
            , cdb_tablespaces t
       where t.contents = 'TEMPORARY'
         and  f.tablespace_name = f.tablespace_name
       group by f.tablespace_name, f.con_id
       )s
       , v$pdbs p
         , v$database d
         where p.con_id(+) = s.con_id
  union all
  select 't_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',usedbytes]', bytes
   from ( select t.con_id, t.tablespace_name, nvl(sum(u.blocks*t.block_size),0) bytes
    from gv$sort_usage u right join
       cdb_tablespaces t
           on ( u.tablespace = t.tablespace_name)
             where   t.contents = 'TEMPORARY'
               group by t.tablespace_name, t.con_id
     )s
     , v$pdbs p
         , v$database d
         where p.con_id(+) = s.con_id
  -- union all
  -- select   't_ts['||t.TABLESPACE_name||',pctfree]', round((t.totalspace/ (t.totalspace - nvl(u.usedbytes,0)))*100) "PCTFREE"
    -- from (select   round (sum (d.bytes))  AS totalspace,
                   -- round (sum ( case when maxbytes < bytes then bytes else maxbytes end)) max_bytes,
                   -- d.tablespace_name
              -- from dba_temp_files d
          -- group by d.tablespace_name) t
      -- left join (
                        -- select u.tablespace tablespace_name, round(sum(u.blocks*t.block_size)) usedbytes
                        -- from gv$sort_usage u
                        -- , dba_tablespaces t
                        -- where u.tablespace = t.tablespace_name
                        -- and   t.contents = 'TEMPORARY'
                        -- group by tablespace
                 -- )u
           -- on t.tablespace_name = u.tablespace_name
               -- group by t.tablespace_name

[checks_60m]
minutes: 60
p_ts: select 'p_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',filesize]' key, s.bytes
       from (
         select df.con_id, df.tablespace_name, sum(bytes) bytes
           from cdb_data_files df
           ,    cdb_tablespaces ts
          where df.tablespace_name = ts.tablespace_name
            and df.con_id = ts.con_id
            and ts.contents = 'PERMANENT'
          group by df.con_id, df.tablespace_name
             ) s
         , v$pdbs p
         , v$database d
         where p.con_id(+) = s.con_id
       union all
        select 'p_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',maxsize]' key, s.maxbytes
          from ( select t.con_id, t.tablespace_name, sum(maxbytes) maxbytes
          from 
           (select case when autoextensible = 'NO'
                                 then bytes
                       else
                        case when bytes > maxbytes
                                 then bytes
                        else          maxbytes
                        end
                       end maxbytes, tablespace_name, con_id
                  from cdb_data_files) f
              , cdb_tablespaces t
         where t.contents = 'PERMANENT'
           and  t.tablespace_name = f.tablespace_name
           and  t.con_id          = f.con_id
         group by t.tablespace_name, t.con_id
         ) s
          , v$pdbs p
          , v$database d
          where p.con_id(+) = s.con_id
       union all
        select 'p_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',usedbytes]' key,  usedbytes
      from (select t.con_id, t.tablespace_name, sum(f.bytes) - sum(a.bytes) usedbytes
        from cdb_data_files f
        join cdb_tablespaces t
          on ( f.tablespace_name = t.tablespace_name)
        left join (select con_id, tablespace_name, sum(bytes) bytes
        from cdb_free_space group by con_id,tablespace_name) a
          on (    t.tablespace_name = a.tablespace_name
              and f.tablespace_name = a.tablespace_name
              and t.con_id          = a.con_id
              and f.con_id          = a.con_id
              )
        where t.contents = 'PERMANENT'
        group by t.tablespace_name, t.con_id
        )s
        , v$pdbs p
        , v$database d
        where p.con_id(+) = s.con_id
       union all
        select 'p_ts['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','||s.tablespace_name||',pctfree]' key,  pct_free
      from (select t.con_id, t.tablespace_name, round((sum(a.bytes) / sum(f.bytes)) * 100) pct_free
        from cdb_data_files f
        join cdb_tablespaces t
          on ( f.tablespace_name = t.tablespace_name)
        left join (select con_id, tablespace_name, sum(bytes) bytes
        from cdb_free_space group by con_id,tablespace_name) a
          on (    t.tablespace_name = a.tablespace_name
              and f.tablespace_name = a.tablespace_name
              and t.con_id          = a.con_id
              and f.con_id          = a.con_id
              )
        where t.contents = 'PERMANENT'
        group by t.tablespace_name, t.con_id
        )s
        , v$pdbs p
        , v$database d
        where p.con_id(+) = s.con_id
expu: select 'expu['||decode (s.con_id,0, d.name, 1,'ROOT',p.name)||','|| username||',expiring]' key, (expiry_date - sysdate)*24*3600 value
	from cdb_users s
	, v$pdbs p
	, v$database d
	where p.con_id(+) = s.con_id
	and account_status IN ( 'OPEN', 'EXPIRED(GRACE)' )
	and expiry_date > sysdate
	and expiry_date < (sysdate + 30)

