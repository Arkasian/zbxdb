# vim: syntax=sql
[auto_discovery_60]
minutes: 60
inst.lld: select distinct inst_name "{#INST_NAME}"
            from (select inst_name from v$active_instances 
                  union
                  select instance_name from gv$instance)
parm.lld: select i.instance_name "{#INST_NAME}", p.name "{#PARAMETER}"
            from gv$instance i, gv$parameter p
            where i.instance_number = p.inst_id
            and   p.type in (3,6) and p.isdefault = 'FALSE'
p_ts.lld: select tablespace_name "{#TS_NAME}", '' "{#PDB}"
            from dba_tablespaces where contents = 'PERMANENT'
t_ts.lld: select tablespace_name "{#TS_NAME}", '' "{#PDB}"
            from dba_tablespaces where contents = 'TEMPORARY'
u_ts.lld: select tablespace_name "{#TS_NAME}", '' "{#PDB}"
            from dba_tablespaces where contents = 'UNDO'
expu.lld: select '' "{#PDB}", username "{#USERNAME}"
            from dba_users s
            where account_status IN ( 'OPEN', 'EXPIRED(GRACE)' )
            and expiry_date > sysdate
            and expiry_date < (sysdate + 30)

[checks_01m]
minutes: 1
inst.uptime: select 'inst['||instance_name||',uptime]' key,(sysdate -startup_time)*60*60*24 val from gv$instance

[checks_05m]
minutes: 5
parm.val:  select 'parm['||i.instance_name||','||p.name||',value]' key, p.value
            from gv$instance i, gv$parameter p
            where i.instance_number = p.inst_id
            and   p.type in (3,6) and p.isdefault = 'FALSE'
            and   upper(p.description) not like '%SIZE%'
            union all
            select 'parm['||i.instance_name||','||p.name||',size]' key, p.value
            from gv$instance i, gv$parameter p
            where i.instance_number = p.inst_id
            and   p.type in (3,6) and p.isdefault = 'FALSE'
            and   upper(p.description) like '%SIZE%'
[checks_05m]
minutes: 5
u_ts: select 'u_ts[,'||t.tablespace_name||',filesize]' key, sum(f.bytes)
        from dba_data_files f, dba_tablespaces t
       where t.contents = 'UNDO'
         and t.tablespace_name = f.tablespace_name
       group by t.tablespace_name
       union all
       select 'u_ts[,'||t.tablespace_name||',maxsize]' key, sum(f.maxbytes)
        from (select case when autoextensible = 'NO'
                               then bytes
                     else
                      case when bytes > maxbytes
                               then bytes
                      else          maxbytes
                      end
                     end maxbytes, tablespace_name
                from dba_data_files) f
            , dba_tablespaces t
       where t.contents = 'UNDO'
         and  t.tablespace_name = f.tablespace_name
       group by t.tablespace_name
       union all
       select 'u_ts[,'||t.tablespace_name||',usedbytes]' key, sum(f.file_size) - sum(a.free_bytes) usedbytes
       from ( select tablespace_name, sum(bytes) file_size
               from dba_data_files
               group by tablespace_name
            ) f
        join dba_tablespaces t
          on ( f.tablespace_name = t.tablespace_name)
        left join (select tablespace_name, sum(bytes) free_bytes
        from dba_free_space group by tablespace_name) a
          on (    t.tablespace_name = a.tablespace_name
              and f.tablespace_name = a.tablespace_name)
        where t.contents = 'UNDO'
        group by t.tablespace_name
       union all
	 select 'u_ts[,'||t.tablespace_name||',pctfree]' key, round((sum(a.bytes) / sum(f.file_size)) * 100)
	 from
           ( select tablespace_name, sum(bytes) file_size
               from dba_data_files
               group by tablespace_name
            ) f
        join dba_tablespaces t
          on ( f.tablespace_name = t.tablespace_name)
        left join (select tablespace_name, sum(bytes) bytes
        from dba_free_space group by tablespace_name) a
          on (    t.tablespace_name = a.tablespace_name
              and f.tablespace_name = a.tablespace_name)
        where t.contents = 'UNDO'
        group by t.tablespace_name

t_ts: select   't_ts[,'||t.TABLESPACE||',filesize]', t.totalspace
    from (select   round (sum (d.bytes))  AS totalspace,
                   round (sum ( case when maxbytes < bytes then bytes else maxbytes end)) max_bytes,
									 d.tablespace_name tablespace
              from dba_temp_files d
          group by d.tablespace_name) t
   union all
   select   't_ts[,'||t.TABLESPACE_name||',maxsize]', sum(maxbytes)
        from (select case when autoextensible = 'NO'
                               then bytes
                     else
                      case when bytes > maxbytes
                               then bytes
                      else          maxbytes
                      end
                     end maxbytes, tablespace_name
                from dba_temp_files) f
            , dba_tablespaces t
       where t.contents = 'TEMPORARY'
         and  t.tablespace_name = f.tablespace_name
       group by t.tablespace_name
  union all
  select 't_ts[,'||t.tablespace_name||',usedbytes]', nvl(sum(u.blocks*t.block_size),0) bytes
    from gv$sort_usage u right join
       dba_tablespaces t
           on ( u.tablespace = t.tablespace_name)
             where   t.contents = 'TEMPORARY'
               group by t.tablespace_name
  union all
  select   't_ts[,'||t.TABLESPACE_name||',pctfree]', round(((t.totalspace - nvl(u.usedbytes,0))/t.totalspace)*100) "PCTFREE"
    from (select   round (sum (d.bytes))  AS totalspace,
                   round (sum ( case when maxbytes < bytes then bytes else maxbytes end)) max_bytes,
                   d.tablespace_name
              from dba_temp_files d
          group by d.tablespace_name) t
      left join (
                        select u.tablespace tablespace_name, round(sum(u.blocks*t.block_size)) usedbytes
                        from gv$sort_usage u
                        , dba_tablespaces t
                        where u.tablespace = t.tablespace_name
                        and   t.contents = 'TEMPORARY'
                        group by tablespace
                 )u
           on t.tablespace_name = u.tablespace_name
[checks_60m]
minutes: 60
p_ts: select 'p_ts[,'||t.tablespace_name||',filesize]' key, sum(f.bytes)
        from dba_data_files f, dba_tablespaces t
       where t.contents = 'PERMANENT'
         and t.tablespace_name = f.tablespace_name
       group by t.tablespace_name
       union all
       select 'p_ts[,'||t.tablespace_name||',maxsize]' key, sum(f.maxbytes)
        from (select case when autoextensible = 'NO'
                               then bytes
                     else
                      case when bytes > maxbytes
                               then bytes
                      else          maxbytes
                      end
                     end maxbytes, tablespace_name
                from dba_data_files) f
            , dba_tablespaces t
       where t.contents = 'PERMANENT'
         and  t.tablespace_name = f.tablespace_name
       group by t.tablespace_name
       union all
       select 'p_ts[,'||t.tablespace_name||',usedbytes]' key, sum(f.file_size) - sum(a.free_bytes) usedbytes
       from ( select tablespace_name, sum(bytes) file_size
               from dba_data_files
               group by tablespace_name
            ) f
        join dba_tablespaces t
          on ( f.tablespace_name = t.tablespace_name)
        left join (select tablespace_name, sum(bytes) free_bytes
        from dba_free_space group by tablespace_name) a
          on (    t.tablespace_name = a.tablespace_name
              and f.tablespace_name = a.tablespace_name)
        where t.contents = 'PERMANENT'
        group by t.tablespace_name
       union all
	 select 'p_ts[,'||t.tablespace_name||',pctfree]' key, round((sum(a.bytes) / sum(f.file_size)) * 100)
	 from
           ( select tablespace_name, sum(bytes) file_size
               from dba_data_files
               group by tablespace_name
            ) f
        join dba_tablespaces t
          on ( f.tablespace_name = t.tablespace_name)
        left join (select tablespace_name, sum(bytes) bytes
        from dba_free_space group by tablespace_name) a
          on (    t.tablespace_name = a.tablespace_name
              and f.tablespace_name = a.tablespace_name)
        where t.contents = 'PERMANENT'
        group by t.tablespace_name

expu: select 'expu[,'|| username||',expiring]' key, (expiry_date - sysdate)*24*3600 value
	from dba_users s
	where account_status IN ( 'OPEN', 'EXPIRED(GRACE)' )
	and expiry_date > sysdate
	and expiry_date < (sysdate + 30)
