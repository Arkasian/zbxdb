# vim: syntax=sql
[auto_discovery_60]
minutes: 60
rman.lld: select distinct database_name + '_' + type "{#OBJ_TYPE}" from msdb.dbo.backupset
             where database_name <> 'tempdb'
db.lld: SELECT name "{#PDB}" FROM master.dbo.sysdatabases

jobs.lld: select j.name as "{#JOBNAME}" from msdb.dbo.sysjobs_view j

parm.lld: SELECT @@servername "{#INST_NAME}", c.name "{#PARAMETER}"
        FROM sys.configurations c
        where c.value <> 0

inst.lld: SELECT @@servername "{#INST_NAME}"

p_ts.lld: IF OBJECT_ID('tempdb..##all_databases') IS NOT NULL
             DROP TABLE  ##all_databases;
  create table ##all_databases
  (
    dbname sysname
  , group_name varchar(128)
  );
  exec sp_msforeachdb '
  use [?]
  insert into ##all_databases
  SELECT distinct db_name(),
  coalesce(b.groupname,''logs'') AS ''File Group''
  FROM dbo.sysfiles a (NOLOCK)
  left outer JOIN sysfilegroups b (NOLOCK) ON a.groupid = b.groupid
  ORDER BY db_name(), coalesce(b.groupname,''logs'')
  ';
  select dbname "{#PDB}", group_name "{#TS_NAME}" from ##all_databases where dbname != 'tempdb'

t_ts.lld: IF OBJECT_ID('tempdb..##all_databases') IS NOT NULL
             DROP TABLE ##all_databases;
  create table ##all_databases
  (
    dbname sysname
  , group_name varchar(128)
  );
  exec sp_msforeachdb '
  use [?]
  insert into ##all_databases
  SELECT distinct db_name(),
  coalesce(b.groupname,''logs'') AS ''File Group''
  FROM dbo.sysfiles a (NOLOCK)
  left outer JOIN sysfilegroups b (NOLOCK) ON a.groupid = b.groupid
  ORDER BY db_name(), coalesce(b.groupname,''logs'')
  ';
  select dbname "{#PDB}", group_name "{#TS_NAME}" from ##all_databases where dbname = 'tempdb'

service.lld: SELECT d.name "{#PDB}", @@servername "{#INST_NAME}", d.name "{#SERVICE_NAME}"
             FROM master.dbo.sysdatabases d
[checks_01m]
minutes: 1
inst.uptime: SELECT 'inst['+@@servername+',uptime]', [ms_ticks]/1000 seconds_since_restart
             FROM sys.[dm_os_sys_info]
db.openmode: SELECT 'db['+name+',openstatus]', case
             when state_desc = 'ONLINE' and is_read_only = 'False' then 3
             when state_desc = 'ONLINE' and is_read_only = 'True' then 2
             else state
             end FROM sys.databases
cpu.i.util: SELECT TOP(1)
						'inst['+@@servername+',CPU_utilization]' as _key,
						SQLProcessUtilization AS [SQLServer_CPU_Utilization]
				FROM (SELECT record.value('(./Record/@id)[1]','int')AS record_id,
				record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]','int')AS [SQLProcessUtilization]
				FROM (SELECT convert(xml, record) AS [record]
				FROM sys.dm_os_ring_buffers
				WHERE ring_buffer_type =N'RING_BUFFER_SCHEDULER_MONITOR'AND record LIKE'%%')AS x )AS y

cpu.db.util: WITH DB_CPU AS
  (SELECT DatabaseID, 
      DB_Name(DatabaseID)AS [DatabaseName], 
          SUM(total_worker_time)AS [CPU_Time(Ms)] 
          FROM  sys.dm_exec_query_stats AS qs 
          CROSS APPLY(SELECT  CONVERT(int, value)AS [DatabaseID]  
                FROM  sys.dm_exec_plan_attributes(qs.plan_handle)  
                      WHERE attribute =N'dbid')AS epa GROUP BY DatabaseID) 
                      SELECT  'db['+DatabaseName+',CPU_utilization]' _key,
                        CAST([CPU_Time(Ms)] * 1.0 /SUM([CPU_Time(Ms)]) OVER()* 100.0 AS DECIMAL(5, 2))AS
                        value
                        FROM  DB_CPU 
                        WHERE not DB_Name(DatabaseID) is null
scn: SELECT   'db[current_scn]', transaction_id
       FROM sys.dm_tran_current_transaction
     union all
     select 'db[delta_scn]', transaction_id
      FROM sys.dm_tran_current_transaction

[checks_05m]
minutes: 5
parm.val:  select 'parm['+@@servername+','+c.name+',value]' kkey, c.value
          FROM sys.configurations c
          where c.value <> 0

service.cnt: SELECT 'service['+db_name(d.dbid)+','+@@servername+','+db_name(d.dbid)+',sess]', count(*)
        FROM sys.sysprocesses d
        WHERE d.dbid > 0
        GROUP BY d.dbid

jobstatus: SELECT 'job['+j.NAME+','+ case when k = 1 then 'enabled'
                      when k = 2 then 'status'
                      when k = 3 then 'age'
                 else 'error'
                 end + ']',
                 case when k = 1 then j.enabled
                      when k = 2 then
       CASE
         WHEN jh.run_status IN ( 0, 1, 2, 3, 4 ) THEN jh.run_status
        --  0: Failed --  1: Succeeded --  2: Retry --  3: Canceled --  4: Running -- -1: Unknow error
         ELSE ( CASE
                  WHEN ja.run_requested_date IS NOT NULL
                       AND ja.stop_execution_date IS NULL THEN 4
                  ELSE -1
                END ) END
                when k = 3 then coalesce(DATEDIFF(s, ja.run_requested_date, getdate()),-1)
        end
	FROM   (msdb.dbo.sysjobactivity ja
					LEFT JOIN msdb.dbo.sysjobhistory jh
								 ON ja.job_history_id = jh.instance_id)
				 JOIN msdb.dbo.sysjobs_view j
					 ON ja.job_id = j.job_id
		cross join
		(select top 3 row_number() over (order by table_name) k from information_schema.tables) k
	WHERE  ja.session_id = (SELECT Max(session_id) FROM   msdb.dbo.sysjobactivity)

t_ts: IF OBJECT_ID('tempdb..##all_databases') IS NOT NULL
             DROP TABLE ##all_databases;
  create table ##all_databases
  (
    dbname sysname
  , group_name varchar(128)
  , file_p bigint
  , used_p bigint
  , free_p bigint
  , max_mb bigint
  , file_name  varchar(128)
  );
  exec sp_msforeachdb '
  use [?]
  insert into ##all_databases
  SELECT db_name(),
  coalesce(b.groupname,''logs'') AS ''File Group'',
  a.Size [size_p],
  FILEPROPERTY(a.Name,''SpaceUsed'') AS [used_p],
  (a.Size-FILEPROPERTY(a.Name,''SpaceUsed'')) AS [free_p],
  case when a.maxsize = 0 then a.size
       when a.maxsize = -1 then (select total_bytes/1024/1024 from sys.dm_os_volume_stats(db_id(),a.fileid))
  else a.maxsize/128
  end  as [max_mb],
  a.Name
  FROM dbo.sysfiles a (NOLOCK)
  left outer JOIN sysfilegroups b (NOLOCK) ON a.groupid = b.groupid
  ORDER BY b.groupname
  ';
	with sums as ( select dbname, group_name, sum(file_p) file_p, sum(used_p) used_p
  , sum(free_p) free_p, sum(max_mb) max_mb
  from ##all_databases
  group by dbname, group_name
  )
  , metrics as (
  select case when dbname = 'tempdb' then 't_ts'
              else 'p_ts'
         end + '['+dbname+','+ group_name+','+
  case WHEN k = 1 THEN 'filesize'
       WHEN k = 2 THEN 'maxsize'
       WHEN k = 3 THEN 'usedbytes'
       WHEN k = 4 THEN 'pctfree'
       WHEN k = 5 THEN 'pctfreeMAX'
  end + ']' as kkey,
  case when k = 1 then (file_p*1024*8)
       when k = 2 then (max_mb*1024*1024)
       when k = 3 then (used_p*1024*8)
       when k = 4 then round(((file_p - used_p)*100)/file_p,2)
       when k = 5 then round((((file_p - used_p) + ((max_mb*128) - file_p))*100) / (max_mb*128),2)
  end as vvalue
  from sums
  cross join
  (select top 5 row_number() over (order by table_name) k from information_schema.tables) k
  where dbname = 'tempdb'
  )
  select kkey, sum(vvalue)
  from metrics
  group by kkey
[checks_10m]
minutes: 10
backup: with backups as(
      select
        distinct
        tbs.database_name
        , tt.*
      from msdb.dbo.backupset tbs
        outer apply (
          select
            top(1)
              bs.backup_size input
            , bs.compressed_backup_size output
            , bs.backup_start_date
            , datediff(s,backup_start_date,getdate()) age
            , datediff(s, bs.backup_start_date, bs.backup_finish_date) ela
            , bs.type
          from msdb.dbo.backupset bs
          where bs.database_name = tbs.database_name
            and bs.type = tbs.type
          order by bs.backup_start_date desc
        ) tt
      where tbs.type = tt.type
        and tbs.database_name <> 'tempdb'
      )
      select 'rman['+b.database_name+'_'+b.type+','+
               case when k = 1 then 'age'
                    when k = 2 then 'ela'
                    when k = 3 then 'input'
                    when k = 4 then 'output'
               end+']', case when k = 1 then b.age
                              when k = 2 then b.ela
                              when k = 3 then b.input
                              when k = 4 then b.output
                        end
            from backups b
      cross join
        (select top 4 row_number() over (order by table_name) k from information_schema.tables) k
hagroups: select 'db['+db.name+',slavestatus]',
            sum(case when ha.synchronization_health = 2 then 0
                     when ha.synchronization_health >= 0 then 1
                     else 42
                end)
        from sys.databases db
        left join sys.dm_hadr_database_replica_states ha
        on (ha.database_id = db.database_id)
        where db.name not in ('tempdb','master','model','msdb')
        group by db.name
[checks_60m]
minutes: 60
instname: SELECT 'zbxdb[connect,instance_name]', @@servername
p_ts: IF OBJECT_ID('tempdb..##all_databases') IS NOT NULL
             DROP TABLE ##all_databases;
  create table ##all_databases
  (
    dbname sysname
  , group_name varchar(128)
  , file_p bigint
  , used_p bigint
  , free_p bigint
  , max_mb bigint
  , file_name  varchar(128)
  );
  exec sp_msforeachdb '
  use [?]
  insert into ##all_databases
  SELECT db_name(),
  coalesce(b.groupname,''logs'') AS ''File Group'',
  a.Size [size_p],
  FILEPROPERTY(a.Name,''SpaceUsed'') AS [used_p],
  (a.Size-FILEPROPERTY(a.Name,''SpaceUsed'')) AS [free_p],
  case when a.maxsize = 0 then a.size
       when a.maxsize = -1 then (select total_bytes/1024/1024 from sys.dm_os_volume_stats(db_id(),a.fileid))
  else a.maxsize/128
  end  as [max_mb],
  a.Name
  FROM dbo.sysfiles a (NOLOCK)
  left outer JOIN sysfilegroups b (NOLOCK) ON a.groupid = b.groupid
  ORDER BY b.groupname
  ';
	with sums as ( select dbname, group_name, sum(file_p) file_p, sum(used_p) used_p
  , sum(free_p) free_p, sum(max_mb) max_mb
  from ##all_databases
  group by dbname, group_name
  )
  , metrics as (
  select case when dbname = 'tempdb' then 't_ts'
              else 'p_ts'
         end + '['+dbname+','+ group_name+','+
  case WHEN k = 1 THEN 'filesize'
       WHEN k = 2 THEN 'maxsize'
       WHEN k = 3 THEN 'usedbytes'
       WHEN k = 4 THEN 'pctfree'
       WHEN k = 5 THEN 'pctfreeMAX'
  end + ']' as kkey,
  case when k = 1 then (file_p*1024*8)
       when k = 2 then (max_mb*1024*1024)
       when k = 3 then (used_p*1024*8)
       when k = 4 then round(((file_p - used_p)*100)/file_p,2)
       when k = 5 then round((((file_p - used_p) + ((max_mb*128) - file_p))*100) / (max_mb*128),2)
  end as vvalue
  from sums
  cross join
  (select top 5 row_number() over (order by table_name) k from information_schema.tables) k
	where dbname != 'tempdb'
  )
  select kkey, sum(vvalue)
  from metrics
  group by kkey
  union all
    select 'db[filesize]', sum(vvalue) from metrics where kkey like '%,filesize]'
      union all
        select 'db[usedbytes]', sum(vvalue) from metrics where kkey like '%,usedbytes]'
[checks_720m]
minutes: 720
version: select 'inst['+i.name+',version]', serverproperty('ProductVersion') from sys.servers i
          where i.name = @@servername
